name: Build and deploy
on:
  push:
    branches:
      - main
jobs:
  build_and_push:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: read
      contents: read
      deployments: write
      packages: write
      pull-requests: write
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
      tag: ${{ steps.tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate tag
        id: tag
        env:
          TZ: Europe/Oslo
        run: |
          export TZ=Europe/Oslo
          timestamp=$(date '+%Y.%m.%d-%H.%M')
          workflow="build-push-deploy"
          sha=$(git rev-parse --short HEAD)
          tag_value="${timestamp}-${workflow}-${sha}"
          echo "TAG=${tag_value}" >> $GITHUB_OUTPUT
          echo "Debug - Generated tag value:"
          cat $GITHUB_OUTPUT
      - name: Build and push image and SBOM to OCI registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: pensjon-regler
          tag: ${{ steps.tag.outputs.TAG }}

  deploy_fss:
    name: Deploy to FSS
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to FSS
        uses: nais/deploy/actions/deploy@v2
        env:
          TZ: Europe/Oslo
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VAR: image=${{ needs.build_and_push.outputs.image }}
          TELEMETRY: ${{ needs.build_and_push.outputs.telemetry }}

  deploy_gcp:
    name: Deploy to GCP
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to GCP
        uses: nais/deploy/actions/deploy@v2
        env:
          TZ: Europe/Oslo
          CLUSTER: dev-gcp
          RESOURCE: nais-gcp.yml
          VAR: image=${{ needs.build_and_push.outputs.image }}
          TELEMETRY: ${{ needs.build_and_push.outputs.telemetry }}